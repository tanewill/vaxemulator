{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "machineName": {
      "type": "string",
      "metadata": {
        "description": "Name for the virtual machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },   
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_F1s",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s"
      ],
      "metadata": {
        "description": "sku to use for the storage nodes - only premium disks VMs are allowed"
      }
    }
  },
  "variables": {
    "vmnameFix": "[toLower(concat('a',substring(uniqueString(resourceGroup().id),4,4),parameters('machineName'))]",
    "myTemplateLink": "https://raw.githubusercontent.com/tanewill/vaxemulator/master/",
    "image": "OracleLinux",
    "computeNodeImage": {
      "OracleLinux":{
        "publisher": "Oracle",
        "offer": "Oracle-Linux",
        "sku": "7.4",
        "version": "latest"
      }
    },
    "nodeOSSettings": {
      "adminUserName": "[parameters('adminUsername')]",
      "imageReference": "[variables('computeNodeImage')[variables('image')]]"
    }
  },
  "resources": [
    { "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2017-04-01",
      "name": "[concat(variables('vmnameFix'),'pip')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('vmnameFix'),'dns')]"
        }
      }
    },
    { "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-04-01",
      "name": "[concat(variables('vmnameFix'),'vnet')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    { "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-04-01",
      "name": "[concat(variables('vmnameFix'),'nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('vmnameFix'),'pip'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', concat(variables('vmnameFix'),'vnet'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('vmnameFix'),'pip'))]"
              },
              "subnet": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/',variables('vmnameFix'),'vnet/subnets/subnet')]"
              }
            }
          }
        ]
      }
    },
    { "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "name": "[parameters('machineName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('vmnameFix'),'nic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmnameFix')]",
          "adminUsername": "[variables('nodeOSSettings').adminUserName]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('nodeOSSettings').imageReference]",
          "osDisk": {
            "name": "[concat(variables('vmnameFix'), 'disk')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmnameFix'),'nic'))]"
            }
          ]
        },
        "extensionProfile": {
          "extensions": [
            {
              "name": "lapextension",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[concat(variables('myTemplateLink'), 'install-emulator.sh')]"
                  ],
                  "commandToExecute": "[concat('bash install-emulator.sh')]"
                }
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(concat(variables('vmnameFix'),'pip')).dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(concat(variables('vmnameFix'),'pip')).dnsSettings.fqdn)]"
    }
  }
}
